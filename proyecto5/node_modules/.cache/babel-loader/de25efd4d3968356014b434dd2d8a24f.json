{"ast":null,"code":"var _jsxFileName = \"/Users/valerita/Desktop/Curso React/proyecto5/proyecto5/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderButtons(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: \"right float red content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.renderButton(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/valerita/Desktop/Curso React/proyecto5/proyecto5/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderButtons","stream","userId","currentUserId","renderList","streams","map","id","renderButton","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,aAAa,CAACC,MAAD,EAAS;AACpB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC5C,aACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAI;AACtC,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKC,YAAL,CAAkBP,MAAlB,CADD,EAEE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,MAAM,CAACQ,KADX,EAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIR,MAAM,CAACS,WADX,CAFF,CAHF,CADF;AAYD,KAbM,CAAP;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,UAAL,EADH,CAFF,CADF;AAQD;;AA1CsC;;AA2CxC;;AAED,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,OAApB,CADJ;AAELF,IAAAA,aAAa,EAAEU,KAAK,CAACG,IAAN,CAAWd;AAFrB,GAAP;AAID,CALD;;AAOA,eAAeR,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderButtons(stream) {\n    if (stream.userId === this.props.currentUserId) {\n        return (\n            <div className=\"right float red content\">\n                <button className=\"ui button primary\">Edit</button>\n                <button className=\"ui button negative\">Delete</button>\n            </div>\n        )\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return(\n        <div className=\"item\" key={stream.id}>\n        {this.renderButton(stream)}\n          <i className=\"large middle aligned icon camera\"/>\n          <div className=\"content\">\n            { stream.title }\n            <div className=\"description\">\n              { stream.description }\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">\n          {this.renderList()}\n        </div>\n      </div>\n    );\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  }\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}